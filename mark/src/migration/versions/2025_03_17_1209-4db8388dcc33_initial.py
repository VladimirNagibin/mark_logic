"""Initial

Revision ID: 4db8388dcc33
Revises:
Create Date: 2025-03-17 12:09:45.380003

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "4db8388dcc33"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "products",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("code_work", sa.Integer(), nullable=True),
        sa.Column("code_hs", sa.Integer(), nullable=True),
        sa.Column("code_mark_head", sa.String(), nullable=False),
        sa.Column("code_mark", sa.String(), nullable=True),
        sa.Column("doc_in", sa.String(), nullable=False),
        sa.Column("data_in", sa.Date(), nullable=True),
        sa.Column("doc_out", sa.String(), nullable=True),
        sa.Column("data_out", sa.Date(), nullable=True),
        sa.Column(
            "status",
            postgresql.ENUM(
                "NOT_DEFINED",
                "ON_BALANCE",
                "DEDUCTED",
                "IN_HS_DEDUCTED",
                name="product_status_enum",
            ),
            nullable=False,
        ),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("code_mark_head"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("products")
    op.execute(sa.text("DROP TYPE IF EXISTS product_status_enum"))
    # ### end Alembic commands ###
